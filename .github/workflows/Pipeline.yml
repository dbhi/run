name: Pipeline

on:
  push:
  pull_request:

jobs:


  Format:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.18'
        check-latest: true

    - name: Format
      run: test -z $(gofmt -l .) || (gofmt -d .; exit 1)


  Test:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.18'
        check-latest: true

    - name: Get dependencies
      run: |
        go get -v ./...
        go install github.com/kyoh86/richgo@latest

    - name: Test
      run: RICHGO_FORCE_COLOR=1 richgo test -v ./...


  Build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.18'
        check-latest: true

    - name: Get dependencies
      run: go get -v ./...

    - name: Build
      run: |
        cd cli
        go build -v ./...
        mv cli ../run

    - run: ./run

    - uses: actions/upload-artifact@v3
      with:
        name: run
        path: run


  Example:
    needs: Build
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: run
        path: ./

    - run: chmod +x run

    - run: ./run list -g example/graph.dot

    - run: ./run list -g example/graph.dot doc

    - run: |
        cd example
        ../run list -c config.json

    - run: |
        cd example
        ../run list -c config.json doc


  Lint:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.18'
        check-latest: true

    - uses: golangci/golangci-lint-action@v3.2.0
      with:
        version: latest
        args: -v
